! function(t, i, e, n) {
    "use strict";
    var o = "powerformLoader",
        a = { action: "", type: "", id: "", render_id: "", is_preview: "", preview_data: [], last_submit_data: {}, extra: {} };

    function r(i, e) { this.element = i, this.$el = t(this.element), this.settings = t.extend({}, a, e), this._defaults = a, this._name = o, this.frontInitCalled = !1, this.scriptsQue = [], this.frontOptions = null, this.init() }
    t.extend(r.prototype, {
        init: function() {
            var t = e.location.search.replace(/(^\?)/, "").split("&").map(function(t) { return this[(t = t.split("="))[0]] = t[1], this }.bind({}))[0];
            t.action = this.settings.action, t.type = this.settings.type, t.id = this.settings.id, t.render_id = this.settings.render_id, t.is_preview = this.settings.is_preview, t.preview_data = JSON.stringify(this.settings.preview_data), t.last_submit_data = this.settings.last_submit_data, t.extra = this.settings.extra, this.load_ajax(t)
        },
        load_ajax: function(n) {
            var o = this;
            t.ajax({
                type: "POST",
                url: i.PowerformFront.ajaxUrl,
                data: n,
                cache: !1,
                beforeSend: function() { t(e).trigger("before.load.powerform", n.id) },
                success: function(a) {
                    if (a.success) {
                        var r = a.data;
                        if (t(e).trigger("response.success.load.powerform", n.id, a), !r.is_ajax_load) return !1;
                        if (r.pagination_config && (i.Powerform_Cform_Paginations = i.Powerform_Cform_Paginations || [], i.Powerform_Cform_Paginations[n.id] = r.pagination_config), o.frontOptions = r.options || null, r.html) {
                            var s = r.style || null,
                                l = r.script || null;
                            o.render_html(r.html, s, l)
                        }
                        r.styles && o.maybe_append_styles(r.styles), r.scripts && o.maybe_append_scripts(r.scripts), !r.scripts && o.frontOptions && o.init_front()
                    } else t(e).trigger("response.error.load.powerform", n.id, a)
                },
                error: function() { t(e).trigger("request.error.load.powerform", n.id) }
            }).always(function() { t(e).trigger("after.load.powerform", n.id) })
        },
        render_html: function(i, e, n) {
            var o = this.settings.id,
                a = this.settings.render_id,
                r = "",
                s = null;
            (s = this.$el.find(".powerform-cform-response-message")).length && (r = s.get(0).outerHTML), (s = this.$el.find(".powerform-poll-response-message")).length && (r = s.get(0).outerHTML), this.$el.replaceWith(i), r && (t("#powerform-module-" + o + "[data-powerform-render=" + a + "] .powerform-cform-response-message").replaceWith(r), t("#powerform-module-" + o + "[data-powerform-render=" + a + "] .powerform-poll-response-message").replaceWith(r)), e && (t("style#powerform-module-" + o).length && t("style#powerform-module-" + o).remove(), t("body").append(e)), n && t("body").append(n)
        },
        maybe_append_styles: function(i) {
            for (var e in i)
                if (i.hasOwnProperty(e) && !t("link#" + e).length) {
                    var n = t("<link>");
                    n.attr("rel", "stylesheet"), n.attr("id", e), n.attr("type", "text/css"), n.attr("media", "all"), n.attr("href", i[e].src), t("head").append(n)
                }
        },
        maybe_append_scripts: function(e) {
            var n = [];
            for (var o in e)
                if (e.hasOwnProperty(o)) {
                    var a = e[o].on,
                        r = e[o].load;
                    if ("window" === a) { if (i[r]) continue } else if ("$" === a && t.fn[r]) continue;
                    var s = {};
                    s.src = e[o].src, n.push(s), this.scriptsQue.push(o)
                }
            if (this.scriptsQue.length)
                for (var l in n) n.hasOwnProperty(l) && this.load_script(n[l]);
            else this.init_front()
        },
        load_script: function(t) {
            var i = this,
                n = e.createElement("script"),
                o = e.getElementsByTagName("body")[0];
            n.type = "text/javascript", n.src = t.src, n.async = !0, n.defer = !0, n.onload = function() { i.script_on_load() }, o.appendChild(n)
        },
        script_on_load: function() { this.scriptsQue.pop(), this.scriptsQue.length || this.init_front() },
        init_front: function() {
            if (!this.frontInitCalled) {
                this.frontInitCalled = !0;
                var i = this.settings.id,
                    e = this.settings.render_id,
                    n = this.frontOptions || null;
                n && t("#powerform-module-" + i + "[data-powerform-render=" + e + "]").powerformFront(n), this.init_window_vars()
            }
        },
        init_window_vars: function() {
            if ("undefined" != typeof PowerformValidationErrors) {
                var t = jQuery(PowerformValidationErrors.selector).data("powerformFrontSubmit");
                void 0 !== t && t.show_messages(PowerformValidationErrors.errors)
            }
            if ("undefined" != typeof PowerformFormHider) {
                var i = jQuery(PowerformFormHider.selector).data("powerformFront");
                void 0 !== i && i.hide()
            }
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }
}(jQuery, window, document),
function(t, i, e, n) {
    "use strict";
    var o = "powerformFront",
        a = { form_type: "custom-form", rules: {}, messages: {}, conditions: {}, inline_validation: !1, chart_design: "bar", chart_options: {} };

    function r(i, e) { this.element = i, this.$el = t(this.element), this.powerform_selector = "#" + t(this.element).attr("id") + '[data-powerform-render="' + t(this.element).data("powerform-render") + '"]', this.powerform_loader_selector = 'div[data-powerform-render="' + t(this.element).data("powerform-render") + '"][data-form="' + t(this.element).attr("id") + '"]', this.settings = t.extend({}, a, e), void 0 !== this.settings.messages && (this.settings.messages = this.maybeParseStringToJson(this.settings.messages, "object")), void 0 !== this.settings.rules && (this.settings.rules = this.maybeParseStringToJson(this.settings.rules, "object")), void 0 !== this.settings.calendar && (this.settings.calendar = this.maybeParseStringToJson(this.settings.calendar, "array")), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() {
            var i = this;
            switch (t(this.powerform_loader_selector).remove(), 0 === this.$el.closest(".wph-modal").length && this.$el.show(), t(e).on("hustle:module:displayed", function(i, e) { t(".wph-modal-active").find("form").css("display", "") }), setTimeout(function() { t(".wph-modal-active").find("form").css("display", "") }, 10), this.settings.form_type) {
                case "custom-form":
                    this.init_custom_form();
                    break;
                case "poll":
                    this.init_poll_form();
                    break;
                case "quiz":
                    this.init_quiz_form()
            }
            t(this.element).powerformFrontSubmit({ form_type: i.settings.form_type, powerform_selector: i.powerform_selector, chart_design: i.settings.chart_design, chart_options: i.settings.chart_options, fadeout: i.settings.fadeout, fadeout_time: i.settings.fadeout_time }), this.activate_field(), this.material_field(), this.small_form()
        },
        init_custom_form: function() {
            var e = this;
            this.settings.inline_validation && (this.init_intlTelInput_validation(), t(this.element).powerformFrontValidate({ rules: e.settings.rules, messages: e.settings.messages })), this.init_pagination(), t(this.element).powerformFrontCondition(this.settings.conditions), t(this.element).find(".powerform-datepicker").powerformFrontDatePicker(this.settings.calendar), this.init_select2(), this.responsive_captcha(), this.field_counter(), this.field_number(), this.field_time(), this.upload_field(), t(i).on("resize", function() { e.responsive_captcha() })
        },
        init_poll_form: function() {
            var i = this,
                e = this.$el.find(".powerform-radio--field"),
                n = this.$el.find(".powerform-input");
            this.$el.hasClass("powerform-poll-disabled") && this.$el.find(".powerform-radio--field").each(function() { t(this).attr("disabled", !0) }), e.on("click", function() {
                n.hide(), n.attr("name", "");
                var e = this.checked,
                    o = t(this).attr("id"),
                    a = t(this).attr("name");
                if (i.$el.find(".powerform-input#" + o + "-extra").length) {
                    var r = i.$el.find(".powerform-input#" + o + "-extra");
                    e ? (r.attr("name", a + "-extra"), r.show()) : r.hide()
                }
                return !0
            })
        },
        init_quiz_form: function() {
            var e = this;
            this.$el.find(".powerform-button").each(function() { t(this).prop("disabled", !0) }), this.$el.find(".powerform-answer input").each(function() { t(this).attr("checked", !1) }), this.$el.find(".powerform-result--info button").on("click", function() { location.reload() }), this.$el.find(".powerform-submit-rightaway").click(function() { e.$el.submit(), t(this).closest(".powerform-question").find(".powerform-submit-rightaway").addClass("powerform-has-been-disabled").attr("disabled", "disabled") }), this.$el.on("click", ".powerform-social--icon a", function(e) {
                e.preventDefault();
                var n = t(this).data("social"),
                    o = t(this).closest(".powerform-social--icons").data("message"),
                    a = { facebook: "https://www.facebook.com/sharer/sharer.php?u=" + i.location.href + "&t=" + o, twitter: "https://twitter.com/intent/tweet?&url=" + i.location.href + "&text=" + o, google: "https://plus.google.com/share?url=" + i.location.href, linkedin: "https://www.linkedin.com/shareArticle?mini=true&url=" + i.location.href + "&title=" + o };
                if (void 0 !== a[n]) { var r = i.open(a[n], n, "height=" + t(i).height() + ",width=" + t(i).width()); return i.focus && r.focus(), !1 }
            }), this.$el.on("change", ".powerform-answer input", function(i) {
                var n = 0,
                    o = e.$el.find(".powerform-question").length;
                e.$el.find(".powerform-answer input").each(function() { t(this).prop("checked") && n++, n === o && e.$el.find(".powerform-button").each(function() { t(this).prop("disabled", !1) }) })
            })
        },
        small_form: function() {
            var e = t(this.element);
            t(i).width() > 782 && e.parent().width() <= 420 && !e.closest(".form-preview-wrapper").length && e.addClass("powerform-size--small")
        },
        init_intlTelInput_validation: function() {
            var e = t(this.element),
                n = e.is(".powerform-design--material");
            e.find(".powerform-phone--field").each(function() {
                var e = t(this).data("national_mode"),
                    o = t(this).data("country");
                if (void 0 !== e) {
                    n && t(this).unwrap(".powerform-input--wrap");
                    var a = { nationalMode: "enabled" === e, initialCountry: "us", utilsScript: i.PowerformFront.cform.intlTelInput_utils_script };
                    void 0 !== o && (a.initialCountry = o, a.allowDropdown = !1), t(this).intlTelInput(a), n && (t(this).closest(".intl-tel-input.allow-dropdown").addClass("powerform-phone-intl").removeClass("intl-tel-input"), t(this).closest(".powerform-field").addClass("intl-tel-input"), t(this).wrap('<div class="powerform-input--wrap"></div>'))
                }
            })
        },
        init_select2: function() {
            var i = t(this.element),
                e = i.attr("id");
            i.hasClass("powerform-design--default") ? (t(this.element).find(".powerform-select").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-dropdown powerform-dropdown--default powerform-ddfor--" + e }), t(this.element).find(".powerform-time").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-droptime powerform-droptime--default powerform-ddfor--" + e })) : i.hasClass("powerform-design--material") ? (t(this.element).find(".powerform-select").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-dropdown powerform-dropdown--material powerform-ddfor--" + e }), t(this.element).find(".powerform-time").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-droptime powerform-droptime--material powerform-ddfor--" + e })) : i.hasClass("powerform-design--bold") ? (t(this.element).find(".powerform-select").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-dropdown powerform-dropdown--bold powerform-ddfor--" + e }), t(this.element).find(".powerform-time").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-droptime powerform-droptime--bold powerform-ddfor--" + e })) : i.hasClass("powerform-design--flat") ? (t(this.element).find(".powerform-select").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-dropdown powerform-dropdown--flat powerform-ddfor--" + e }), t(this.element).find(".powerform-time").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-droptime powerform-droptime--flat powerform-ddfor--" + e })) : (t(this.element).find(".powerform-select").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-dropdown powerform-ddfor--" + e }), t(this.element).find(".powerform-time").wpmuiSelect({ allowClear: !1, containerCssClass: "powerform-select2", dropdownCssClass: "powerform-droptime powerform-droptime--flat powerform-ddfor--" + e }))
        },
        responsive_captcha: function() {
            t(this.element).find(".powerform-g-recaptcha").each(function() {
                if (t(this).is(":visible")) {
                    var i = t(this).parent().width(),
                        e = 1;
                    i < 302 && (e = i / 302), t(this).css("transform", "scale(" + e + ")"), t(this).css("-webkit-transform", "scale(" + e + ")"), t(this).css("transform-origin", "0 0"), t(this).css("-webkit-transform-origin", "0 0")
                }
            })
        },
        init_pagination: function() {
            var e = t(this.element).find(".powerform-pagination").length,
                n = i.location.hash,
                o = !1,
                a = 0;
            e > 0 && (void 0 !== n && n.indexOf("step-") >= 0 && (o = !0, a = n.substr(6, 8)), t(this.element).powerformFrontPagination({ totalSteps: e, hashStep: o, step: a, inline_validation: this.settings.inline_validation }))
        },
        activate_field: function() {
            var i = t(this.element);

            function e() { i.find(".select2-container").hasClass("select2-container--open") ? setTimeout(e, 300) : i.find(".select2-container").closest(".powerform-field").removeClass("powerform-is_active") }
            i.find(".powerform-input, .powerform-textarea").each(function() { var i = t(this); "" !== t(this).val().trim() ? (t(this).closest(".powerform-field").addClass("powerform-is_filled"), t(this).closest(".powerform-poll--answer").addClass("powerform-is_filled")) : (t(this).closest(".powerform-field").removeClass("powerform-is_filled"), t(this).closest(".powerform-poll--answer").removeClass("powerform-is_filled")), i.mouseover(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").addClass("powerform-is_hover"), t(this).closest(".powerform-poll--answer").addClass("powerform-is_hover") }).mouseout(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").removeClass("powerform-is_hover"), t(this).closest(".powerform-poll--answer").removeClass("powerform-is_hover") }), i.focus(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").addClass("powerform-is_active"), t(this).closest(".powerform-poll--answer").addClass("powerform-is_active") }).blur(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").removeClass("powerform-is_active"), t(this).closest(".powerform-poll--answer").removeClass("powerform-is_active") }), i.change(function(i) { i.stopPropagation(), "" !== t(this).val().trim() ? (t(this).closest(".powerform-field").addClass("powerform-is_filled"), t(this).closest(".powerform-poll--answer").addClass("powerform-is_filled")) : (t(this).closest(".powerform-field").removeClass("powerform-is_filled"), t(this).closest(".powerform-poll--answer").removeClass("powerform-is_filled")), "" !== t(this).val().trim() && "" !== t(this).find("powerform-label--validation").text() && (t(this).find(".powerform-label--validation").remove(), t(this).find(".powerform-field").removeClass("powerform-has_error")) }) }), i.find(".powerform-select + .select2, .powerform-time + .select2").each(function() {
                var i = t(this);
                i.mouseover(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").addClass("powerform-is_hover") }).mouseout(function(i) { i.stopPropagation(), t(this).closest(".powerform-field").removeClass("powerform-is_hover") }), i.on("click", function(n) { n.stopPropagation(), e(), i.hasClass("select2-container--open") ? t(this).closest(".powerform-field").addClass("powerform-is_active") : t(this).closest(".powerform-field").removeClass("powerform-is_active") })
            })
        },
        field_counter: function() {
            t(this.element).find(".powerform-input, .powerform-textarea").each(function() {
                var i = t(this),
                    e = 0;
                i.on("change keyup", function(i) {
                    i.stopPropagation();
                    var n = t(this).closest(".powerform-field").find(".powerform-field--helper .powerform-label--limit");
                    n.length && n.data("limit") && (e = "words" !== n.data("type") ? t(this).val().trim().length : t(this).val().trim().split(/\s+/).length, n.html(e + " / " + n.data("limit")))
                })
            })
        },
        field_number: function() {
            t(this.element).find("input[type=number]").each(function() {
                t(this).keypress(function(t) {
                    var i, e = [44, 45, 46],
                        n = t.which;
                    for (i = 48; i < 58; i++) e.push(i);
                    e.indexOf(n) >= 0 || t.preventDefault()
                })
            })
        },
        field_time: function() {
            t(".powerform-input-time").on("input", function(i) {
                var e = t(this),
                    n = e.val();
                n && n.length >= 2 && e.val(n.substr(0, 2))
            })
        },
        material_field: function() {
            var i = t(this.element);
            if (i.is(".powerform-design--material")) {
                var e = i.find(".powerform-input--wrap"),
                    n = i.find(".powerform-textarea--wrap"),
                    o = i.find(".powerform-date"),
                    a = (i.find(".powerform-product"), i.find(".powerform-pagination--nav").find("li"));
                t('<span class="powerform-nav-border"></span>').insertAfter(a), e.prev(".powerform-field--label").addClass("powerform-floating--input"), e.closest(".powerform-phone-intl").prev(".powerform-field--label").addClass("powerform-floating--input"), n.prev(".powerform-field--label").addClass("powerform-floating--textarea"), o.hasClass("powerform-has_icon") ? o.prev(".powerform-field--label").addClass("powerform-floating--date") : o.prev(".powerform-field--label").addClass("powerform-floating--input")
            }
        },
        toggle_file_input: function() {
            t(this.element).find(".powerform-upload").each(function() {
                var i = t(this),
                    e = i.find(".powerform-input"),
                    n = i.find(".powerform-upload--remove");
                "" !== e.val() ? n.show() : n.hide()
            })
        },
        upload_field: function() {
            var i = this,
                e = t(this.element);
            this.toggle_file_input(), e.find(".powerform-upload--remove").on("click", function(i) {
                i.preventDefault();
                var e = t(this),
                    n = e.siblings(".powerform-input"),
                    o = e.siblings(".powerform-label");
                n.val(""), o.html("No file chosen"), e.hide()
            }), e.find(".powerform-upload-button").on("click", function(n) {
                n.preventDefault();
                var o = t(this).attr("data-id"),
                    a = e.find("input#" + o),
                    r = e.find("label#" + o);
                a.trigger("click"), a.change(function() {
                    var e = t(this).val(),
                        n = e.length ? e.split("\\").pop() : "";
                    r.text(n), i.toggle_file_input()
                })
            }), e.find(".powerform-input-file").on("change", function(i) {
                i.preventDefault();
                var e = t(this)[0].files.length,
                    n = t(this).find("~ .powerform-upload--remove");
                0 === e ? n.hide() : n.show()
            })
        },
        renderCaptcha: function(e) {
            var n = this;
            if (void 0 === t(e).data("powerform-recapchta-widget")) {
                var o = t(e).data("size"),
                    a = { sitekey: t(e).data("sitekey"), theme: t(e).data("theme"), size: o };
                if ("invisible" === o && (a.badge = "inline", a.callback = function(i) { t(n.element).trigger("submit.frontSubmit") }), "" !== a.sitekey) {
                    var r = i.grecaptcha.render(e, a);
                    t(e).data("powerform-recapchta-widget", r), this.responsive_captcha()
                }
            }
        },
        hide: function() { this.$el.hide() },
        maybeParseStringToJson: function(t, i) {
            var e = {};
            if ("object" == typeof t) return t;
            if ("object" === i) t = "{" + t.trim() + "}";
            else {
                if ("array" !== i) return {};
                t = "[" + t.trim() + "]"
            }
            try { t = t.replace(/\,(?!\s*?[\{\[\"\'\w])/g, ""), e = JSON.parse(t) } catch (t) { console.error(t.message), "object" === i ? e = {} : "array" === i && (e = []) }
            return e
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }, t(e).on("tinymce-editor-init", function(t, i) { i.on("change", function() { 0 === i.id.indexOf("powerform-wp-editor-") && i.save() }) })
}(jQuery, window, document);
var powerform_render_captcha = function() {
    jQuery(".powerform-g-recaptcha").each(function() {
        var t = jQuery(this).closest("form");
        if (t.length > 0) {
            var i = t.data("powerformFront");
            void 0 !== i && i.renderCaptcha(jQuery(this)[0])
        }
    })
};
! function(t, i, e, n) {
    "use strict";
    var o = "powerformFrontPagination",
        a = { totalSteps: 0, step: 0, hashStep: 0, inline_validation: !1 };

    function r(e, n) { this.element = t(e), this.$el = this.element, this.totalSteps = 0, this.step = 0, this.hashStep = !1, this.next_button = i.PowerformFront.cform.pagination_next, this.prev_button = i.PowerformFront.cform.pagination_prev, this.form_id = 0, this.settings = t.extend({}, a, n), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() { this.$el.find("input[name=form_id]").length > 0 && (this.form_id = this.$el.find("input[name=form_id]").val()), this.form_id && "object" == typeof i.Powerform_Cform_Paginations && "object" == typeof i.Powerform_Cform_Paginations[this.form_id] && "custom" === i.Powerform_Cform_Paginations[this.form_id]["pagination-labels"] && (this.prev_button = i.Powerform_Cform_Paginations[this.form_id]["pagination-footer-button-text"], this.next_button = i.Powerform_Cform_Paginations[this.form_id]["pagination-right-button-text"]), this.totalSteps = this.settings.totalSteps, this.step = this.settings.step, this.settings.hashStep && this.step > 0 ? this.go_to(this.step, !0) : this.go_to(0, !1), this.render_navigation(), this.render_bar_navigation(), this.render_footer_navigation(), this.init_events(), this.update_buttons(), this.update_navigation() },
        init_events: function() {
            var t = this;
            this.$el.find(".powerform-pagination-prev").click(function(i) { i.preventDefault(), t.handle_click("prev") }), this.$el.find(".powerform-pagination-next").click(function(i) { i.preventDefault(), t.handle_click("next") }), this.$el.on("reset", function(i) { t.on_form_reset(i) }), this.$el.on("powerform.front.pagination.focus.input", function(i, e) { t.on_focus_input(i, e) })
        },
        on_form_reset: function(t) { this.go_to(0, !0), this.update_buttons() },
        on_focus_input: function(t, i) {
            var e = this.get_page_of_input(i);
            this.go_to(e, !0), this.update_buttons()
        },
        render_footer_navigation: function() { this.$el.hasClass("powerform-design--material") ? this.$el.append('<div class="powerform-pagination--footer"><button class="powerform-button powerform-pagination-prev"><span class="powerform-button--mask" aria-label="hidden"></span><span class="powerform-button--text">' + this.prev_button + '</span></button><button class="powerform-button powerform-pagination-next"><span class="powerform-button--mask" aria-label="hidden"></span><span class="powerform-button--text">' + this.next_button + "</span></button></div>") : this.$el.append('<div class="powerform-pagination--footer"><button class="powerform-button powerform-pagination-prev">' + this.prev_button + '</button><button class="powerform-button powerform-pagination-next">' + this.next_button + "</button></div>") },
        render_bar_navigation: function() {
            var t = this.$el.find(".powerform-pagination--bar");
            t.length && (t.html('<div class="powerform-bar--text powerform-current">0%</div><div class="powerform-bar--progress"><span style="width: 0%"></span></div>'), this.calculate_bar_percentage())
        },
        calculate_bar_percentage: function() {
            var t = this.totalSteps,
                i = this.step + 1,
                e = this.$el;
            if (e.length) {
                var n = Math.round(i / t * 100);
                e.find(".powerform-current").html(n + "%"), e.find(".powerform-bar--progress span").css("width", n + "%")
            }
        },
        render_navigation: function() {
            var i = this.$el.find(".powerform-pagination--nav");
            if (i.length) {
                var e = this.$el.find(".powerform-pagination").not(".powerform-pagination-start"),
                    n = this.$el.find(".powerform-pagination-start");
                this.$el.hasClass("powerform-design--material") ? (e.each(function() {
                    var e = t(this),
                        n = e.data("label"),
                        o = e.data("step") - 1;
                    i.append('<li class="powerform-nav-step powerform-nav-step-' + o + '"><span class="powerform-step-text">' + n + "</span></li>")
                }), n.each(function() {
                    var n = t(this).data("label"),
                        o = e.length;
                    i.append('<li class="powerform-nav-step powerform-nav-step-' + o + '"><span class="powerform-step-text">' + n + "</span></li>")
                })) : (e.each(function() {
                    var e = t(this),
                        n = e.data("label"),
                        o = e.data("step") - 1;
                    i.append('<li class="powerform-nav-step powerform-nav-step-' + o + '"><span class="powerform-step-text">' + n + '</span><span class="powerform-step-dot" aria-label="hidden"></span></li>')
                }), n.each(function() {
                    var n = t(this).data("label"),
                        o = e.length;
                    i.append('<li class="powerform-nav-step powerform-nav-step-' + o + '"><span class="powerform-step-text">' + n + '</span><span class="powerform-step-dot" aria-label="hidden"></span></li>')
                }))
            }
        },
        handle_click: function(t) {
            if ("prev" === t && 0 !== this.step) this.go_to(this.step - 1, !0);
            else if ("next" === t) {
                if (this.settings.inline_validation && !this.is_step_inputs_valid()) return;
                this.go_to(this.step + 1, !0)
            }
            this.update_buttons()
        },
        is_step_inputs_valid: function() {
            var t = 0,
                i = this.$el.data("validator"),
                e = this.$el.find("[data-step=" + this.step + "]");
            return void 0 === i || (e.find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(":hidden:not(.powerform-wp-editor-required, .powerform-input-file-required)").not('[gramm="true"]').each(function(e, n) { i.element(n) || (0 === t && n.focus(), t++) }), 0 === t)
        },
        get_page_of_input: function(i) {
            var e = this.step,
                n = t(i).closest(".powerform-pagination");
            if (n.length > 0) {
                var o = t(n).data("step");
                void 0 !== o && (e = +o)
            }
            return e
        },
        update_buttons: function() {
            if (0 === this.step ? this.$el.find(".powerform-pagination-prev").attr("disabled", !0) : this.$el.find(".powerform-pagination-prev").removeAttr("disabled"), this.step === this.totalSteps && (this.step--, this.$el.submit()), this.step === this.totalSteps - 1) {
                var t = this.$el.find(".powerform-pagination-submit").html();
                this.$el.hasClass("powerform-design--material") ? this.$el.find(".powerform-pagination-next").removeClass("powerform-pagination-next").attr("id", "powerform-submit").find(".powerform-button--text").html(t) : this.$el.find(".powerform-pagination-next").removeClass("powerform-pagination-next").attr("id", "powerform-submit").html(t)
            } else this.$el.hasClass("powerform-design--material") ? this.$el.find(".powerform-pagination-next .powerform-button--text").html(this.next_button) : this.$el.find(".powerform-pagination-next").html(this.next_button)
        },
        go_to: function(t, i) {
            if (this.step = t, t === this.totalSteps) return !1;
            this.$el.find(".powerform-pagination").hide(), this.$el.find("[data-step=" + t + "]").show();
            var e = this.$el.data("powerformFront");
            void 0 !== e && e.responsive_captcha(), this.update_navigation(), i && this.scroll_to_top_form()
        },
        update_navigation: function() { this.$el.find(".powerform-step-current").removeClass("powerform-step-current"), this.$el.find(".powerform-nav-step-" + this.step).addClass("powerform-step-current"), this.calculate_bar_percentage() },
        scroll_to_top_form: function() {
            var e = this.$el,
                n = this.$el.find(".powerform-row").not(":hidden").first();
            if (n.length && (e = n), e.length) {
                var o = "html,body";
                this.$el.closest(".sui-dialog").length > 0 && (o = ".sui-dialog"), this.$el.closest(".wph-modal").length > 0 && (o = ".wph-modal"), t(o).animate({ scrollTop: e.offset().top - (t(i).height() - e.outerHeight(!0)) / 2 }, 500, function() { e.attr("tabindex") || e.attr("tabindex", -1), e.focus() })
            }
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }
}(jQuery, window, document),
function(t, i, e, n) {
    "use strict";
    var o = "powerformFrontDatePicker",
        a = {};

    function r(i, e) { this.element = i, this.$el = t(this.element), this.settings = t.extend({}, a, e), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() {
            var i = this,
                e = this.$el.data("format"),
                n = this.$el.data("restrict-type"),
                o = this.$el.data("restrict"),
                a = this.$el.data("restrict"),
                r = this.$el.data("start-year"),
                s = this.$el.data("end-year");
            a = !isNaN(parseFloat(a)) && isFinite(a) ? [a.toString()] : o.split(","), r || (r = "c-95"), s || (s = "c+95");
            var l = this.$el.closest(".powerform-custom-form"),
                f = "powerform-calendar";
            l.hasClass("powerform-design--default") ? f = "powerform-calendar--default" : l.hasClass("powerform-design--material") ? f = "powerform-calendar--material" : l.hasClass("powerform-design--flat") ? f = "powerform-calendar--flat" : l.hasClass("powerform-design--bold") && (f = "powerform-calendar--bold"), this.$el.datepicker({ beforeShow: function(t, i) { i.dpDiv.addClass(f + " powerform-calfor--" + l.attr("id")) }, beforeShowDay: function(t) { return "week" === n ? i.restrict_week(a, t) : i.restrict_custom(a, t) }, dayNamesMin: this.settings, changeMonth: !0, changeYear: !0, dateFormat: e, yearRange: r + ":" + s, minDate: new Date(r, 0, 1), maxDate: new Date(s, 11, 31), onClose: function() { t(this).valid() } })
        },
        restrict_week: function(t, i) { var e = i.getDay(); return -1 !== t.indexOf(e.toString()) ? [!1, "disabledDate"] : [!0, "enabledDate"] },
        restrict_custom: function(t, i) {
            var e = [];
            e[0] = "January", e[1] = "February", e[2] = "March", e[3] = "April", e[4] = "May", e[5] = "June", e[6] = "July", e[7] = "August", e[8] = "September", e[9] = "October", e[10] = "November", e[11] = "December";
            var n = i.getMonth(),
                o = i.getDate(),
                a = i.getFullYear(),
                r = o + " " + e[n] + " " + a;
            return -1 !== t.indexOf(r) ? [!1, "disabledDate"] : [!0, "enabledDate"]
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }
}(jQuery, window, document),
function(t, i, e, n) {
    "use strict";
    var o = "powerformFrontValidate",
        a = { rules: {}, messages: {} };

    function r(i, e) { this.element = i, this.$el = t(this.element), this.settings = t.extend({}, a, e), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() {
            t(this.element).validate({
                ignore: ":hidden:not(.do-validate)",
                errorPlacement: function(t, i) {},
                onfocusout: function(i) {!1 === t(i).hasClass("hasDatepicker") && t(i).valid() },
                highlight: function(i, e, n) {
                    var o = this.errorMap[i.name],
                        a = t(i).closest(".powerform-field--inner");
                    0 === a.length && (a = t(i).closest(".powerform-field"));
                    var r = a.find(".powerform-label--validation");
                    if (0 === r.length && (a.append('<label class="powerform-label--validation"></label>'), r = a.find(".powerform-label--validation")), t(i).attr("aria-invalid", "true"), r.html(o), a.addClass("powerform-has_error"), t(i).hasClass("powerform-input-time")) {
                        var s = t(i).closest(".powerform-field:not(.powerform-field--inner)"),
                            l = s.children(".powerform-label--validation"),
                            f = "",
                            d = [];
                        0 === l.length && (s.append('<label class="powerform-label--validation"></label>'), l = s.children(".powerform-label--validation")), l.html(""), s.find(".powerform-input-time").each(function() { 0 === (f = t(this).siblings(".powerform-label--validation")).length && (f = t(this).closest(".powerform-field").find(".powerform-label--validation")), d.push(f.html()) }), l.html(d[0] + (d[0].length > 0 ? " <br/> " : "") + d[1])
                    }
                },
                unhighlight: function(i, e, n) {
                    var o = t(i).closest(".powerform-field--inner");
                    0 === o.length && (o = t(i).closest(".powerform-field"));
                    var a = o.find(".powerform-label--validation");
                    if (t(i).removeAttr("aria-invalid"), a.remove(), o.removeClass("powerform-has_error"), t(i).hasClass("powerform-input-time")) {
                        var r = t(i).closest(".powerform-field:not(.powerform-field--inner)"),
                            s = r.children(".powerform-label--validation"),
                            l = 0,
                            f = "",
                            d = "";
                        r.find(".powerform-input-time").each(function() { "true" === t(this).attr("aria-invalid") && (0 === (d = t(this).siblings(".powerform-label--validation")).length && (d = t(this).closest(".powerform-field").find(".powerform-label--validation")), f = d.html(), l++) }), 0 === l ? s.remove() : s.html(f)
                    }
                },
                rules: this.settings.rules,
                messages: this.settings.messages
            })
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }, t.validator.addMethod("validurl", function(i, e) { var n = t.validator.methods.url.bind(this); return n(i, e) || n("http://" + i, e) }), t.validator.addMethod("powerformPhoneNational", function(i, e) { return this.optional(e) || t(e).intlTelInput("isValidNumber") }), t.validator.addMethod("powerformPhoneInternational", function(i, e) { return this.optional(e) || t(e).intlTelInput("isValidNumber") }), t.validator.addMethod("dateformat", function(t, i, e) { var n, o, a, r, s, l = !1; return ("yy-mm-dd" !== e ? /^\d{1,2}\/\d{1,2}\/\d{4}$/ : /^\d{4}-\d{1,2}-\d{1,2}$/).test(t) ? ("dd/mm/yy" === e ? (n = t.split("/"), o = parseInt(n[0], 10), a = parseInt(n[1], 10), r = parseInt(n[2], 10)) : "mm/dd/yy" === e ? (n = t.split("/"), a = parseInt(n[0], 10), o = parseInt(n[1], 10), r = parseInt(n[2], 10)) : (n = t.split("-"), r = parseInt(n[0], 10), a = parseInt(n[1], 10), o = parseInt(n[2], 10)), l = (s = new Date(Date.UTC(r, a - 1, o, 12, 0, 0, 0))).getUTCFullYear() === r && s.getUTCMonth() === a - 1 && s.getUTCDate() === o) : l = !1, this.optional(i) || l }), t.validator.addMethod("maxwords", function(t, i, e) { return this.optional(i) || jQuery.trim(t).split(/\s+/).length <= e }), t.validator.addMethod("trim", function(t, i, e) { return !0 === this.optional(i) || 0 !== t.trim().length }), t.validator.addMethod("emailWP", function(t, i, e) {
        if (this.optional(i)) return !0;
        if (t.trim().length < 6) return !1;
        if (t.indexOf("@", 1) < 0) return !1;
        var n = t.split("@", 2);
        if (!n[0].match(/^[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~\.-]+$/)) return !1;
        if (n[1].match(/\.{2,}/)) return !1;
        var o = n[1].split(".");
        if (o.length < 2) return !1;
        for (var a = o.length, r = 0; r < a; r++)
            if (!o[r].match(/^[a-z0-9-]+$/i)) return !1;
        return !0
    }), t.validator.methods.number = function(t, i, e) { return this.optional(i) || /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/.test(t) }
}(jQuery, window, document),
function(t, i, e, n) {
    "use strict";
    var o = "powerformFrontCondition",
        a = { fields: {}, relations: {} };

    function r(i, e) { this.element = i, this.$el = t(this.element), this.settings = t.extend({}, a, e), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() {
            var i = this;
            this.add_missing_relations(), this.$el.find(".powerform-field input, .powerform-field select").change(function(e) {
                var n = t(this),
                    o = n.closest(".powerform-col").attr("id");
                if (void 0 === o && (o = n.attr("id")), !i.has_relations(o)) return !1;
                i.get_relations(o).forEach(function(t) {
                    var e = i.get_field_logic(t),
                        n = e.action,
                        o = e.rule,
                        a = e.conditions,
                        r = 0;
                    a.forEach(function(t) { i.is_applicable_rule(t) && r++ }), "all" === o && r === a.length || "any" === o && r > 0 ? i.toggle_field(t, n, "valid") : i.toggle_field(t, n, "invalid")
                })
            }), this.$el.find(".powerform-field input, .powerform-field select").change(), this.init_events()
        },
        init_events: function() {
            var t = this;
            this.$el.on("powerform.front.condition.restart", function(i) { t.on_restart(i) })
        },
        on_restart: function(t) { this.$el.find(".powerform-field input, .powerform-field select").change() },
        add_missing_relations: function() {
            var t = this,
                i = {};
            if (void 0 !== this.settings.fields) {
                var e = this.settings.fields;
                Object.keys(e).forEach(function(n) {
                    e[n].conditions.forEach(function(e) {
                        var o = e.field;
                        t.has_relations(o) || (void 0 === i[o] && (i[o] = []), i[o].push(n))
                    })
                })
            }
            Object.keys(i).forEach(function(e) { t.settings.relations[e] = i[e] })
        },
        get_field_logic: function(t) { return void 0 === this.settings.fields[t] ? [] : this.settings.fields[t] },
        has_relations: function(t) { return void 0 !== this.settings.relations[t] },
        get_relations: function(t) { return this.has_relations(t) ? this.settings.relations[t] : [] },
        get_field_value: function(i) {
            var e = this.get_form_field(i),
                n = e.val();
            return this.field_is_radio(e) ? n = e.filter(":checked").val() : this.field_is_checkbox(e) && (n = [], e.each(function() { t(this).is(":checked") && n.push(t(this).val().toLowerCase()) })), n || ""
        },
        field_is_radio: function(i) { var e = !1; return i.each(function() { if ("radio" === t(this).attr("type")) return e = !0, !1 }), e },
        field_is_checkbox: function(i) { var e = !1; return i.each(function() { if ("checkbox" === t(this).attr("type")) return e = !0, !1 }), e },
        get_form_field: function(t) { var i = this.$el.find("#" + t + "-field"); return 0 === i.length && 0 === (i = this.$el.find("input[name=" + t + "]")).length && 0 === (i = this.$el.find("textarea[name=" + t + "]")).length && 0 === (i = this.$el.find('input[name="' + t + '[]"]')).length && (i = this.$el.find("#" + t)), i },
        is_numeric: function(t) { return !isNaN(parseFloat(t)) && isFinite(t) },
        is_applicable_rule: function(t) {
            if (void 0 === t) return !1;
            var i = this.get_field_value(t.field),
                e = t.value,
                n = t.operator;
            return this.is_matching(i, e, n)
        },
        is_matching: function(i, e, n) {
            var o = Array.isArray(i);
            switch (o || (i = i ? i.toLowerCase() : ""), e = e ? e.toLowerCase() : "", n) {
                case "ist":
                    return o ? t.inArray(e, i) > -1 : i === e;
                case "is_not":
                    return o ? -1 === t.inArray(e, i) : i !== e;
                case "is_great":
                    return i = +i, e = +e, !(!this.is_numeric(i) || !this.is_numeric(e)) && i > e;
                case "is_less":
                    return i = +i, e = +e, !(!this.is_numeric(i) || !this.is_numeric(e)) && i < e;
                case "enthält":
                    return this.contains(i, e);
                case "starts":
                    return i.startsWith(e);
                case "ends":
                    return i.endsWith(e)
            }
            return !1
        },
        contains: function(t, i) { return t.toLowerCase().indexOf(i) >= 0 },
        toggle_field: function(t, i, e) {
            var n = this.get_form_field(t).closest(".powerform-col"),
                o = n.find(".powerform-input-file-required"),
                a = n.find(".powerform-wp-editor-required"),
                r = n.closest(".powerform-row");
            "show" === i && ("valid" === e ? (r.removeClass("powerform-hidden"), n.removeClass("powerform-hidden"), o.length > 0 && o.addClass("do-validate"), a.length > 0 && a.addClass("do-validate")) : (n.addClass("powerform-hidden"), o.length > 0 && o.removeClass("do-validate"), a.length > 0 && a.removeClass("do-validate"), 0 === r.find("> .powerform-col:not(.powerform-hidden)").length && r.addClass("powerform-hidden"))), "hide" === i && ("valid" === e ? (n.addClass("powerform-hidden"), o.length > 0 && o.removeClass("do-validate"), a.length > 0 && a.removeClass("do-validate")) : (n.removeClass("powerform-hidden"), o.length > 0 && o.addClass("do-validate"), a.length > 0 && a.addClass("do-validate")))
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }
}(jQuery, window, document),
function(t, i, e, n) {
    "use strict";
    var o = "powerformFrontSubmit",
        a = { form_type: "custom-form", powerformFront: !1, powerform_selector: "", chart_design: "bar", chart_options: {} };

    function r(i, e) { this.element = i, this.$el = t(this.element), this.powerformFront = null, this.settings = t.extend({}, a, e), this._defaults = a, this._name = o, this.init() }
    t.extend(r.prototype, {
        init: function() {
            switch (this.powerformFront = this.$el.data("powerformFront"), this.settings.form_type) {
                case "custom-form":
                    this.settings.powerform_selector && t(this.settings.powerform_selector).length || (this.settings.powerform_selector = ".powerform-custom-form"), this.handle_submit_custom_form();
                    break;
                case "quiz":
                    this.settings.powerform_selector && t(this.settings.powerform_selector).length || (this.settings.powerform_selector = ".powerform-quiz"), this.handle_submit_quiz();
                    break;
                case "poll":
                    this.settings.powerform_selector && t(this.settings.powerform_selector).length || (this.settings.powerform_selector = ".powerform-poll"), this.handle_submit_poll()
            }
        },
        decodeHtmlEntity: function(t) { return t.replace(/&#(\d+);/g, function(t, i) { return String.fromCharCode(i) }) },
        handle_submit_custom_form: function() {
            var e = this;
            t(this.element);
            e.$el.find(".powerform-cform-response-message").find(".powerform-label--success").not(":hidden").length && e.focus_to_element(e.$el.find(".powerform-cform-response-message"), !0), t("body").on("submit.frontSubmit", this.settings.powerform_selector, function(n) {
                var o = t(this),
                    a = new FormData(this),
                    r = o.find(".powerform-cform-response-message"),
                    s = o.find(".powerform-g-recaptcha");
                if (s.length) {
                    var l = (s = t(s.get(0))).data("powerform-recapchta-widget"),
                        f = s.data("size"),
                        d = i.grecaptcha.getResponse(l);
                    if ("invisible" === f && 0 === d.length) return i.grecaptcha.execute(l), !1;
                    if (e.$el.hasClass("powerform_ajax") && i.grecaptcha.reset(l), r.html(""), s.hasClass("error") && s.removeClass("error"), 0 === d.length) return s.hasClass("error") || s.addClass("error"), r.html('<label class="powerform-label--error"><span>' + i.PowerformFront.cform.captcha_error + "</span></label>"), e.focus_to_element(r), !1
                }
                return !e.$el.hasClass("powerform_ajax") || (r.html(""), r.html('<label class="powerform-label--info"><span>' + i.PowerformFront.cform.processing + "</span></label>"), e.focus_to_element(r), e.$el.find("input[type=file]").each(function() { "" === t(this).val() && "function" == typeof i.FormData.prototype.delete && a.delete(t(this).attr("name")) }), n.preventDefault(), t.ajax({
                    type: "POST",
                    url: i.PowerformFront.ajaxUrl,
                    data: a,
                    cache: !1,
                    contentType: !1,
                    processData: !1,
                    beforeSend: function() { o.find("button").attr("disabled", !0) },
                    success: function(n) {
                        o.find(".powerform-label--validation").remove(), o.find(".powerform-field").removeClass("powerform-has_error"), o.find("button").removeAttr("disabled"), r.html("");
                        var s = n.success ? "success" : "error";
                        void 0 !== n.message ? (r.html('<div class="powerform-label--' + s + '"><span>' + n.message + "</span></div>"), e.focus_to_element(r, "success" === s)) : void 0 !== n.data && (s = n.data.success ? "success" : "error", r.html('<div class="powerform-label--' + s + '"><span>' + n.data.message + "</span></div>"), e.focus_to_element(r, "success" === s)), !n.data.success && n.data.errors.length && (o.trigger("powerform:form:submit:failed", a), e.show_messages(n.data.errors)), !0 === n.success && (o[0] && (o[0].reset(), o.find(".powerform-upload--remove").hide(), o.find(".powerform-upload .powerform-input").val(""), o.find(".powerform-upload .powerform-label").html(i.PowerformFront.cform.no_file_chosen), o.find(".powerform-select").each(function() {
                            var i = t(this).data("default-value");
                            t(this).val(i).trigger("change")
                        }), o.trigger("powerform:form:submit:success", a), o.trigger("powerform.front.condition.restart")), void 0 !== n.data.url && (i.location.href = e.decodeHtmlEntity(n.data.url)), void 0 !== n.data.behav && "behaviour-hide" === n.data.behav && e.$el.hide())
                    },
                    error: function(t) {
                        o.find("button").removeAttr("disabled"), r.html("");
                        var n = 400 === t.status ? i.PowerformFront.cform.upload_error : i.PowerformFront.cform.error;
                        r.html('<label class="powerform-label--notice"><span>' + n + "</span></label>"), e.focus_to_element(r), o.trigger("powerform:form:submit:failed", a)
                    }
                }), !1)
            })
        },
        handle_submit_quiz: function() {
            var e = this;
            t("body").on("submit.frontSubmit", this.settings.powerform_selector, function(n) {
                var o, a = t(this);
                n.preventDefault(), e.$el.find(".powerform-has-been-disabled").removeAttr("disabled"), o = a.serialize(), e.$el.find(".powerform-has-been-disabled").attr("disabled", "disabled");
                var r = e.$el.find(".powerform-button"),
                    s = r.data("loading");
                return "" !== s && r.text(s), t.ajax({
                    type: "POST",
                    url: i.PowerformFront.ajaxUrl,
                    data: o,
                    beforeSend: function() { e.$el.find("button").attr("disabled", "disabled") },
                    success: function(t) {
                        t.success ? "nowrong" === t.data.type ? (i.history.pushState("powerform", "Powerform", t.data.result_url), e.$el.find(".powerform-quiz--result").html(t.data.result), e.$el.find(".powerform-answer input").attr("disabled", "disabled")) : "knowledge" === t.data.type && (i.history.pushState("powerform", "Powerform", t.data.result_url), e.$el.find(".powerform-quiz--result").size() > 0 && e.$el.find(".powerform-quiz--result").html(t.data.finalText), Object.keys(t.data.result).forEach(function(i) {
                            var n = e.$el.find("#" + i);
                            n.find(".powerform-question--result").html("<span>" + t.data.result[i].message + "</span>"), n.find(".powerform-submit-rightaway").attr("disabled", "disabled");
                            var o, a = e.$el.find('[id|="' + t.data.result[i].answer + '"]').closest(".powerform-answer");
                            o = t.data.result[i].isCorrect ? "powerform-is_correct" : "powerform-is_incorrect", a.addClass(o)
                        })) : e.$el.find("button").removeAttr("disabled")
                    }
                }), !1
            }), t("body").on("click", ".powerform-result--retake", function() { location.reload() })
        },
        handle_submit_poll: function() {
            var e = this;
            e.$el.find(".powerform-poll-response-message").find(".powerform-label--success").not(":hidden").length && e.focus_to_element(e.$el.find(".powerform-poll-response-message"), !0), t("body").on("submit.frontSubmit", this.settings.powerform_selector, function(n) { t(this); var o = e.$el.find(".powerform-poll-response-message"); return !e.$el.hasClass("powerform_ajax") || (o.html(""), o.html('<label class="powerform-label--info"><span>' + i.PowerformFront.poll.processing + "</span></label>"), e.focus_to_element(o), n.preventDefault(), t.ajax({ type: "POST", url: i.PowerformFront.ajaxUrl, data: e.$el.serialize(), beforeSend: function() { e.$el.find("button").attr("disabled", !0) }, success: function(t) { e.$el.find("button").removeAttr("disabled"), o.html(""); var n = t.success ? "success" : "error";!1 === t.success ? (o.html('<label class="powerform-label--' + n + '"><span>' + t.data.message + "</span></label>"), e.focus_to_element(o)) : void 0 !== t.data && (n = t.data.success ? "success" : "error", o.html('<label class="powerform-label--' + n + '"><span>' + t.data.message + "</span></label>"), e.focus_to_element(o, "success" === n)), !0 === t.success && (void 0 !== t.data.url ? i.location.href = t.data.url : void 0 !== t.data.chart_data && t.data.chart_data.length > 1 && "undefined" != typeof google && (void 0 === google.visualization ? (google.charts.load("current", { packages: ["corechart", "bar"] }), google.charts.setOnLoadCallback(function() { e.render_poll_chart(t.data.chart_data, t.data.back_button, e) })) : e.render_poll_chart(t.data.chart_data, t.data.back_button, e))) }, error: function() { e.$el.find("button").removeAttr("disabled"), o.html(""), o.html('<label class="powerform-label--notice"><span>' + i.PowerformFront.poll.error + "</span></label>"), e.focus_to_element(o) } }), !1) })
        },
        render_poll_chart: function(i, n, o) {
            o.$el.find(".powerform-poll--chart").remove();
            var a = "powerform-chart-poll-" + (o.$el.attr("id") + "-" + o.$el.data("powerformRender")),
                r = t('<div id="' + a + '" class="powerform-poll--chart" style="width: 100%; height: 300px;"></div>'),
                s = google.visualization.arrayToDataTable(i),
                l = t(n),
                f = !1;
            t(r).insertBefore(o.$el.find(".powerform-poll--answers")), o.$el.find(".powerform-poll--answers").hide(), o.$el.find(".powerform-poll--actions").empty(), l.click(function(t) { t.preventDefault(), location.reload() }), o.$el.find(".powerform-poll--actions").append(l), "bar" === o.settings.chart_design ? f = new google.visualization.BarChart(e.getElementById(a)) : "pie" === this.settings.chart_design && (f = new google.visualization.PieChart(e.getElementById(a))), f && f.draw(s, o.settings.chart_options)
        },
        focus_to_element: function(e, n) {
            (n = n || !1) && (n = this.settings.fadeout);
            var o = this.settings.fadeout_time;
            e.show(), t("html,body").animate({ scrollTop: e.offset().top - (t(i).height() - e.outerHeight(!0)) / 2 }, 500, function() { e.attr("tabindex") || e.attr("tabindex", -1), e.focus(), n && e.show().delay(o).fadeOut("slow") })
        },
        show_messages: function(i) {
            var e = this,
                n = e.$el.data("powerformFrontCondition");
            if (void 0 !== n) {
                this.$el.find(".powerform-label--validation").remove();
                var o = 0;
                i.forEach(function(i) {
                    var a = Object.keys(i),
                        r = Object.values(i),
                        s = n.get_form_field(a);
                    if (s.length) {
                        if (0 === o && (e.$el.trigger("powerform.front.pagination.focus.input", [s]), e.focus_to_element(s)), t(s).hasClass("powerform-input-time")) {
                            var l = t(s).closest(".powerform-field:not(.powerform-field--inner)"),
                                f = l.children(".powerform-label--validation");
                            0 === f.length && (l.append('<label class="powerform-label--validation"></label>'), f = l.children(".powerform-label--validation")), f.html(r)
                        }
                        var d = t(s).closest(".powerform-field--inner");
                        0 === d.length && 0 === (d = t(s).closest(".powerform-field")).length && (d = t(s).find(".powerform-field")).length > 1 && (d = d.first());
                        var m = d.find(".powerform-label--validation");
                        0 === m.length && (d.append('<label class="powerform-label--validation"></label>'), m = d.find(".powerform-label--validation")), t(s).attr("aria-invalid", "true"), m.html(r), d.addClass("powerform-has_error"), o++
                    }
                })
            }
            return this
        }
    }), t.fn[o] = function(i) { return this.each(function() { t.data(this, o) || t.data(this, o, new r(this, i)) }) }
}(jQuery, window, document);